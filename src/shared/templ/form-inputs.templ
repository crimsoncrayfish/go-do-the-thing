package templ_shared

import (
	"go-do-the-thing/src/helpers/constants"
	"strconv"
	"time"
)

templ FormContainer(postTo string, content templ.Component) {
	<div
		id="create-form-container"
		class="bg-secondary-light dark:bg-secondary-dark rounded-xl border border-border-light mb-0 dark:border-border-dark shadow-lg mx-auto max-h-0 overflow-y-hidden opacity-0 transition-[max-height, opacity] duration-500 ease-in-out mb-0"
	>
		<div
			class="overflow-y-auto overflow-x-hidden z-50 mb-5 justify-center items-center bg-opacity-40 w-full md:inset-0 h-full"
		>
			<div class="relative rounded-lg shadow">
				<div
					class="flex items-center justify-between p-4 md:p-5 rounded-t"
				>
					<p class="font-bold text-text-on-light text-xl dark:text-text-on-dark">TODO:</p>
					<button
						class="text-text-on-light dark:text-text-on-dark"
						onclick="toggleClassForId('max-h-0','create-form-container'); toggleClassForId('max-h-[50rem]','create-form-container');toggleClassForId('opacity-100','create-form-container');toggleClassForId('opacity-0','create-form-container');"
					>
						@SvgClose()
					</button>
				</div>
				<div id="create-project-form" class="relative">
					<form
						hx-post={ postTo }
						hx-indicator="#task-form-loader"
						class="px-5 pt-5 pb-1 mb-0"
					>
						@content
					</form>
				</div>
			</div>
		</div>
	</div>
}

templ FormTextInput(title, name, placeholder, value string) {
	<div>
		<label class="block mb-2 text-sm font-medium text-text-on-light dark:text-text-on-dark">
			{ title }
			<input
				type="text"
				name={ name }
				placeholder={ placeholder }
				value={ value }
				class="
				bg-primary-light mt-2 border border-border-light text-text-on-light text-sm rounded-lg focus:ring-accent-light focus:border-border-light block w-full p-2.5 dark:bg-primary-dark dark:border-border-dark placeholder-accent-light dark:placeholder-accent-dark dark:text-text-on-dark dark:focus:ring-accent-dark dark:focus:border-border-dark"
			/>
		</label>
	</div>
}

templ FormPasswordInput(title, name, placeholder string) {
	<div>
		<label for={ name } class="block mb-2 text-sm font-medium text-text-on-light dark:text-text-on-dark">{ title }</label>
		<input
			type="password"
			name={ name }
			id={ name }
			placeholder="••••••••"
			class="bg-primary-light border border-border-light text-text-on-light rounded-lg block w-full p-2.5 dark:bg-primary-dark dark:border-border-dark dark:text-text-on-dark placeholder-accent-light dark:placeholder-accent-dark focus:ring-accent-light focus:border-border-light dark:focus:ring-accent-dark dark:focus:border-border-dark"
			required=""
		/>
	</div>
}

templ FormDatePicker(title, name, id string, date *time.Time) {
	<div>
		<label class="block mb-2 text-sm font-medium text-text-on-light dark:text-text-on-dark">{ title }</label>
		<div class="mt-2 relative">
			<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
				<svg
					class="w-4 h-4 text-text-on-light dark:text-text-on-dark"
					aria-hidden="true"
					xmlns="http://www.w3.org/2000/svg"
					fill="currentColor"
					viewBox="0 0 20 20"
				>
					<path
						d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"
					></path>
				</svg>
			</div>
			<input
				type="text"
				name={ name }
				value={ date.Format(constants.DateFormat) }
				placeholder={ title }
				id={ id }
				datepicker
				datepicker-format="yyyy-mm-dd"
				class=" border border-border-light text-text-on-light text-sm rounded-lg block w-full ps-10 p-2.5
				bg-primary-light dark:bg-primary-dark dark:border-border-dark 
				dark:placeholder-accent-dark placeholder-accent-light
				dark:text-text-on-dark focus:ring-accent-light focus:border-border-light dark:focus:ring-accent-dark dark:focus:border-border-dark"
			/>
		</div>
	</div>
}

templ FormListInput(title, name string, value int64, opts map[int64]string) {
	<div>
		<label class="block mb-2 p-0 text-sm font-medium text-text-on-light dark:text-text-on-dark">
			{ title }
			<select
				name={ name }
				class="mt-2 bg-primary-light dark:bg-primary-dark border border-border-light text-text-on-light text-sm rounded-lg block w-full p-2.5 dark:border-border-dark dark:placeholder-accent-dark placeholder-accent-light dark:text-text-on-dark dark:focus:ring-accent-dark dark:focus:border-accent-dark focus:ring-accent-light focus:border-accent-light"
			>
				for id, name := range opts {
					if id == value {
						<option class="text-accent-light dark:text-accent-dark" value={ strconv.FormatInt(id, 10) } selected>{ name }</option>
					} else {
						<option class="text-accent-light dark:text-accent-dark" value={ strconv.FormatInt(id, 10) }>{ name }</option>
					}
				}
			</select>
		</label>
	</div>
}

templ FormListInputWithAllOption(title, name string, value int64, opts map[int64]string) {
	<div>
		<label class="block mb-2 p-0 text-sm font-medium text-text-on-light dark:text-text-on-dark">
			{ title }
			<select
				name={ name }
				class="mt-2 bg-primary-light border border-border-light text-text-on-light text-sm rounded-lg block w-full p-2.5 dark:bg-primary-dark dark:border-border-dark dark:placeholder-accent-dark placeholder-accent-light dark:text-text-on-dark dark:focus:ring-accent-dark dark:focus:border-accent-dark focus:ring-accent-light focus:border-accent-light"
			>
				<option selected value="0" class="text-accent-light dark:text-accent-dark">All</option>
				for id, name := range opts {
					if id == value {
						<option class="text-accent-light dark:text-accent-dark" value={ strconv.FormatInt(id, 10) } selected>{ name }</option>
					} else {
						<option class="text-accent-light dark:text-accent-dark" value={ strconv.FormatInt(id, 10) }>{ name }</option>
					}
				}
			</select>
		</label>
	</div>
}
