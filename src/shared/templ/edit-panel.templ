package templ_shared

templ EditPanel(title string, content templ.Component) {
	<div
		id="edit-panel"
		class="bg-secondary-light dark:bg-secondary-dark shadow-lg w-full flex flex-col overflow-y-auto h-[calc(100vh-5rem)] "
	>
		<div class="flex justify-between items-center p-4 flex-shrink-0">
			<div class="flex items-center gap-4">
				<button
					onclick="togglePanelWidth()"
					class="hidden lg:block text-text-on-light dark:text-text-on-dark hover:opacity-80 transition-transform duration-300"
					id="expand-button"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5"></path>
					</svg>
				</button>
				<h2 class="text-2xl font-bold text-text-on-light dark:text-text-on-dark">{ title }</h2>
			</div>
			<button
				onclick="closeEditPanel()"
				class="text-text-on-light dark:text-text-on-dark hover:opacity-80"
			>
				@SvgClose()
			</button>
		</div>
		<div class="relative flex-1 min-h-0 px-4 pb-4">
			<div id="edit-panel-content" class="space-y-4 overflow-y-auto">
				@content
			</div>
			<div id="edit-panel-loader" class="absolute inset-0 justify-center items-center bg-secondary-light bg-opacity-80 dark:bg-secondary-dark dark:bg-opacity-80 z-50 my-indicator">
				<div class="loader-bounce flex space-x-2">
					<div class="w-4 h-4 bg-primary-light dark:bg-primary-dark rounded-full animate-bounce-balls" style="animation-delay:0s"></div>
					<div class="w-4 h-4 bg-primary-light dark:bg-primary-dark rounded-full animate-bounce-balls" style="animation-delay:0.2s"></div>
					<div class="w-4 h-4 bg-primary-light dark:bg-primary-dark rounded-full animate-bounce-balls" style="animation-delay:0.4s"></div>
				</div>
			</div>
			<style>
				@keyframes bounce-balls {
					0%, 80%, 100% { transform: translateY(0); }
					40% { transform: translateY(-20px); }
				}
				.animate-bounce-balls {
					display: inline-block;
					animation: bounce-balls 1.2s infinite both;
				}
				</style>
		</div>
	</div>
	<script>
	function openEditPanel() {
		const layout = document.getElementById('main-layout');
		const mainContent = document.getElementById('main-content');
		layout.classList.remove('grid-cols-[100%_0%]', 'grid-cols-[0%_100%]');
		layout.classList.add('grid-cols-[0%_100%]','lg:grid-cols-[50%_50%]');
		mainContent.classList.remove('opacity-0');
	}

	function closeEditPanel() {
		const layout = document.getElementById('main-layout');
		const mainContent = document.getElementById('main-content');
		const expandButton = document.getElementById('expand-button');
		layout.classList.remove('grid-cols-[50%_50%]', 'grid-cols-[0%_100%]', 'lg:grid-cols-[50%_50%]');
		layout.classList.add('grid-cols-[100%_0%]');
		expandButton.classList.remove('rotate-180');
		mainContent.classList.remove('opacity-0');
		
		const editPanelContent = document.getElementById('edit-panel-content');
		if (editPanelContent) {
			editPanelContent.innerHTML = '';
		}
	}

	function togglePanelWidth() {
		const layout = document.getElementById('main-layout');
		const mainContent = document.getElementById('main-content');
		const expandButton = document.getElementById('expand-button');
		
		const startStopButton = document.getElementById('start-stop-button');
		const startStopLabel = document.getElementById('start-stop-label');
		const completeTaskButton = document.getElementById('complete-task-button');
		const completeTaskLabel = document.getElementById('complete-task-label');

		if (layout.classList.contains('lg:grid-cols-[50%_50%]')) {
			layout.classList.remove('grid-cols-[0%_100%]','lg:grid-cols-[50%_50%]');
			layout.classList.add('grid-cols-[0%_100%]');
			expandButton.classList.add('rotate-180');
			mainContent.classList.add('opacity-0');

			if (startStopLabel) {
				startStopLabel.classList.remove('xl:inline'); 
				startStopLabel.classList.add('md:inline'); 
			}
			if (startStopButton) {
				startStopButton.classList.remove('xl:px-4', 'xl:py-2'); 
				startStopButton.classList.add('md:px-4', 'md:py-2'); 
			}
			if (completeTaskLabel) {
				completeTaskLabel.classList.remove('xl:inline'); 
				completeTaskLabel.classList.add('md:inline'); 
			}
			if (completeTaskButton) {
				completeTaskButton.classList.remove('xl:px-4', 'xl:py-2'); 
				completeTaskButton.classList.add('md:px-4', 'md:py-2'); 
			}

		} else {
			layout.classList.remove('grid-cols-[0%_100%]');
			layout.classList.add('grid-cols-[0%_100%]','lg:grid-cols-[50%_50%]');
			expandButton.classList.remove('rotate-180');
			mainContent.classList.remove('opacity-0');

			if (startStopLabel) {
				startStopLabel.classList.add('xl:inline'); 
				startStopLabel.classList.remove('md:inline'); 
			}
			if (startStopButton) {
				startStopButton.classList.add('xl:px-4', 'xl:py-2'); 
				startStopButton.classList.remove('md:px-4', 'md:py-2'); 
			}
			if (completeTaskLabel) {
				completeTaskLabel.classList.add('xl:inline'); 
				completeTaskLabel.classList.remove('md:inline'); 
			}
			if (completeTaskButton) {
				completeTaskButton.classList.add('xl:px-4', 'xl:py-2'); 
				completeTaskButton.classList.remove('md:px-4', 'md:py-2'); 
			}
		}
	}
	</script>
}
