package templ_todo

import (
	m "go-do-the-thing/src/models"
	mf "go-do-the-thing/src/models/forms"
	ts "go-do-the-thing/src/shared/templ"
)

templ TaskListWithBody(navbar m.NavBarObject, formdata mf.TaskForm, tasks []*m.TaskView, projects map[int64]string) {
	<!DOCTYPE html>
	<html lang="en">
		@ts.Header()
		<body id="main-body" class="bg-primary-light dark:bg-primary-dark antialiased">
			@TaskListPage(navbar, formdata, tasks, projects)
		</body>
	</html>
}

templ TaskListPage(navbar m.NavBarObject, formdata mf.TaskForm, tasks []*m.TaskView, projects map[int64]string) {
	@ts.NavBar(navbar)
	@ts.Loader()
	<div class="px-1 xl:px-[10%] w-full text-text-on-light dark:text-text-on-dark">
		<div class="mx-auto pt-5 px-5 py-5 flex items-center justify-between">
			<p class="font-bold text-xl text-text-on-light dark:text-text-on-dark">TODO: Items</p>
			<div>
				@ts.OpenFormButton("New Task", "create-task-form-container", ts.SvgPlus())
			</div>
		</div>
		<div
			id="create-task-form-container"
			class="bg-secondary-light dark:bg-secondary-dark rounded-xl border border-border-light dark:border-border-dark shadow-lg mx-auto max-h-0 overflow-y-hidden opacity-0 transition-[max-height, opacity] duration-500 ease-in-out"
		>
			<div
				class="overflow-y-auto overflow-x-hidden z-50 mb-5 justify-center items-center bg-opacity-40 w-full md:inset-0 h-full"
			>
				<div class="relative  rounded-lg shadow">
					<div
						class="flex items-center justify-between p-4 md:p-5 rounded-t"
					>
						<p class="font-bold text-text-on-light text-xl dark:text-text-on-dark">TODO:</p>
						<button
							class="text-text-on-light dark:text-text-on-dark"
							onclick="swapClassForId('max-h-0', 'max-h-[50rem]','create-task-form-container');swapClassForId('opacity-0', 'opacity-100','create-task-form-container');"
						>
							@ts.SvgClose()
						</button>
					</div>
					@TaskForm("item", "Create", formdata, projects)
				</div>
			</div>
		</div>
		@TaskListTable(tasks)
	</div>
}

templ TaskListTable(tasks []*m.TaskView) {
	<div class="relative items-center overflow-x-auto ">
		<table
			class="mb-2 mx-auto bg-secondary-light dark:bg-secondary-dark text-sm text-left rtl:text-right text-text-on-light dark:text-text-on-dark"
		>
			<thead
				class="text-xs uppercase bg-secondary-light dark:bg-secondary-dark text-text-on-light dark:text-text-on-dark"
			>
				<tr>
					<th scope="col" class="px-6 py-3">
						<p class="hidden lg:block">Status</p>
					</th>
					<th scope="col" class="columns-2xl px-6 py-3">Task</th>
					<th scope="col" class="columns-2xl hidden md:table-cell px-6 py-3">Due Date</th>
					<th scope="col" class="columns-lg hidden lg:table-cell px-6 py-3">Assignee</th>
					<th scope="col" class="columns-lg hidden md:table-cell px-6 py-3">Project</th>
					<th scope="col" class="px-6 py-3">
						<p class="hidden lg:block">Actions</p>
					</th>
				</tr>
			</thead>
			<tbody id="task-rows" class="item-list">
				for _, task := range tasks {
					@TaskRow(task)
				}
			</tbody>
		</table>
		@ts.NoDataRow(len(tasks) > 0)
	</div>
}
