package templ_todo

import (
	"fmt"
	"go-do-the-thing/src/helpers/constants"
	"go-do-the-thing/src/models"
	fm "go-do-the-thing/src/models/forms"
	"go-do-the-thing/src/shared/templ"
	ts "go-do-the-thing/src/shared/templ"
)

templ TaskItemWithBody(
	task *models.TaskView,
	navbar models.NavBarObject,
	formdata fm.TaskForm,
	projects map[int64]string) {
	@templ_shared.Main(TaskItem(task, navbar, formdata, projects))
}

templ TaskItem(task *models.TaskView, navbar models.NavBarObject, formdata fm.TaskForm, projects map[int64]string) {
	@ts.NavBar(navbar)
	<div class="px-1 my-4 sm:px-[5%] xl:px-[10%] w-full text-text-on-light dark:text-text-on-dark mb-10">
		@TaskItemContent(task, projects)
		@taskCommentBox()
		@taskTimeline(task)
	</div>
}

templ TaskItemContent(task *models.TaskView, projects map[int64]string) {
	<div id="task-content" class="theme-transition bg-secondary-light dark:bg-secondary-dark rounded-xl p-4 mb-6 border border-border-light dark:border-border-dark shadow-lg">
		<!-- Header with back button, status, and action buttons -->
		<div class="flex justify-between items-start mb-4">
			<!-- Left side with back button and status -->
			<div class="flex items-center gap-3">
				<button
					hx-get="/todo/items"
					hx-replace-url="true"
					hx-target="body"
					class="text-text-on-light dark:text-text-on-dark hover:opacity-80 transition-opacity"
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"></path>
					</svg>
				</button>
				@taskStatusChip(task)
			</div>
			<!-- Right side with action buttons -->
			<div class="flex gap-2">
				<button class="theme-transition bg-warning-light dark:bg-warning-dark hover:opacity-80 text-primary-light dark:text-primary-dark rounded-full font-medium transition-all px-2 py-2 md:px-4 md:py-2 flex items-center gap-2">
					<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
						<path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"></path>
					</svg>
					<span class="hidden md:inline">Pause</span>
				</button>
				<button
					hx-swap="outerHTML"
					hx-target="#task-content"
					hx-post={ fmt.Sprintf("/todo/item/status/%d?source=task_page", task.Id) }
					class="theme-transition bg-success-light dark:bg-success-dark hover:opacity-80 text-white rounded-full font-medium transition-all px-2 py-2 md:px-4 md:py-2 flex items-center gap-2"
				>
					<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
					</svg>
					<span class="hidden md:inline">Complete</span>
				</button>
				<!-- More Options Button and Dropdown -->
				@editDeleteMenu(task, editFromTask())
			</div>
		</div>
		<!-- Task Title and Timer -->
		<div class="mb-6">
			<!-- Task Header with Title -->
			<div class="flex items-center justify-between mb-6">
				<!-- Name -->
				<div class="flex flex-row items-center space-x-4">
					@statusIcon(task)
					<h1 id="task-title-view" class="text-2xl font-bold">
						{ task.Name }
					</h1>
					<!-- Edit Mode -->
					<input type="text" id="task-title-edit" class="hidden w-full bg-primary-light dark:bg-primary-dark border border-border-light dark:border-border-dark rounded-lg px-4 py-2 text-2xl font-bold text-text-on-light dark:text-text-on-dark" value="Design System Implementation"/>
				</div>
				<!-- Project -->
				<div class="flex flex-row items-center">
					<!-- View Mode -->
					<div class="float-end px-2">
						@templ_shared.SvgTag(task.ProjectId)
					</div>
					<p
						hx-get={ fmt.Sprintf("/project/%d", task.ProjectId) }
						hx-replace-url="true"
						hx-target="body"
						id="task-project-view"
						class="cursor-pointer hover:text-link dark:hover:text-link hover:underline text-xl text-text-on-light dark:text-text-on-dark"
					>
						{ task.ProjectName }
					</p>
					<!-- Edit Mode -->
					<div id="task-project-edit" class="hidden">
						@templ_shared.FormListInput("", "project", task.ProjectId, projects)
					</div>
				</div>
			</div>
			<div class="mb-4">
				<div class="text-text-on-light dark:text-text-on-dark text-sm">Time Elapsed</div>
				<div id="detail-timer" class="text-xl font-semibold">02:37:05</div>
			</div>
		</div>
		<!-- Horizontal Divider -->
		<hr class="h-px my-8 border-0 bg-border-light dark:border-border-dark "/>
		<!-- Task Details with Divider -->
		<div class="flex flex-col md:flex-row">
			<div class="md:w-2/3 md:pr-6">
				<div class="mb-6">
					<h2 class="text-sm font-medium text-text-on-light/70 dark:text-text-on-dark/70 mb-2">Description</h2>
					<!-- View Mode -->
					<div id="task-description-view" class="text-text-on-light dark:text-text-on-dark">
						if len(task.Description) > 0 {
							{ task.Description }
						} else {
							"..."
						}
					</div>
					<!-- Edit Mode -->
					<textarea id="task-description-edit" class="hidden w-full bg-primary-light dark:bg-primary-dark border border-border-light dark:border-border-dark rounded-lg px-4 py-2 text-text-on-light dark:text-text-on-dark min-h-[100px]">{ task.Description }</textarea>
				</div>
			</div>
			<!-- Task Metadata -->
			<div class="md:w-1/3 space-y-4 mt-4 md:mt-0 text-left md:text-right">
				<!-- Due Date -->
				<div>
					<h3 class="text-sm font-medium text-text-on-light/70 dark:text-text-on-dark/70 mb-1">Due Date</h3>
					<!-- View Mode -->
					<p id="task-due-date-view" class="text-text-on-light dark:text-text-on-dark">{ task.DueDate.Format(constants.PrettyDateFormat) }</p>
					<!-- Edit Mode -->
					<input type="date" id="task-due-date-edit" class="hidden w-full bg-primary-light dark:bg-primary-dark border border-border-light dark:border-border-dark rounded-lg px-4 py-2 text-text-on-light dark:text-text-on-dark" value="2025-04-25"/>
				</div>
				<div>
					<h3 class="text-sm font-medium text-text-on-light/70 dark:text-text-on-dark/70 mb-1">Created By</h3>
					<p class="text-text-on-light dark:text-text-on-dark">{ task.CreatedBy.FullName }</p>
				</div>
				<div>
					<h3 class="text-sm font-medium text-text-on-light/70 dark:text-text-on-dark/70 mb-1">Created</h3>
					<p class="text-text-on-light dark:text-text-on-dark">{ task.CreatedDate.Format(constants.PrettyDateFormat) }</p>
				</div>
			</div>
		</div>
		<!-- Edit Mode Actions -->
		<div id="edit-actions" class="hidden mt-6 flex justify-end gap-2">
			<button onclick="cancelEdit()" class="px-4 py-2 rounded-lg border border-border-light dark:border-border-dark text-text-on-light dark:text-text-on-dark hover:bg-primary-light/10 dark:hover:bg-primary-dark/10 transition-colors">
				Cancel
			</button>
			<button onclick="saveEdit()" class="px-4 py-2 rounded-lg bg-accent-light dark:bg-accent-dark text-primary-light dark:text-primary-dark hover:opacity-80 transition-opacity">
				Save Changes
			</button>
		</div>
	</div>
}

templ editFromTask() {
	<script>
        function editTask() {
            // Hide view elements
            document.getElementById('task-title-view').classList.add('hidden');
            document.getElementById('task-description-view').classList.add('hidden');
            document.getElementById('task-due-date-view').classList.add('hidden');
            document.getElementById('task-project-view').classList.add('hidden');

            // Show edit elements
            document.getElementById('task-title-edit').classList.remove('hidden');
            document.getElementById('task-description-edit').classList.remove('hidden');
            document.getElementById('task-due-date-edit').classList.remove('hidden');
            document.getElementById('task-project-edit').classList.remove('hidden');
            document.getElementById('edit-actions').classList.remove('hidden');

            // Close the options menu
            document.getElementById('task-options-menu').classList.add('hidden');
        }
	</script>
	<button
		class={ " w-full text-left px-4 py-2 text-sm",
								"text-text-on-light dark:text-text-on-dark",
								"hover:bg-secondary-light dark:hover:bg-secondary-dark flex items-center" }
		aria-label="Edit Task"
		onclick="editTask()"
	>
		@templ_shared.SvgEdit()
		<p class="pl-4">Edit</p>
	</button>
}

templ taskCommentBox() {
	<div class="theme-transition bg-secondary-light dark:bg-secondary-dark  rounded-xl p-6 mb-6 border border-border-light dark:border-border-dark  shadow-lg">
		<h2 class="text-xl font-bold mb-4">Comment</h2>
		<!-- Comment Form -->
		<div class="flex gap-3">
			<div class="flex-shrink-0">
				<div class="h-10 w-10 rounded-full bg-accent-light dark:bg-accent-dark  flex items-center justify-center text-primary-light dark:text-primary-dark  font-bold">
					M
				</div>
			</div>
			<div class="flex-grow">
				<textarea placeholder="Add a comment..." class="theme-transition bg-primary-light dark:bg-primary-dark  text-text-light dark:text-text-dark  rounded-xl py-3 px-4 w-full focus:outline-none focus:ring-2 focus:ring-accent-light dark:focus:ring-accent-dark  focus:ring-opacity-50 shadow-sm border border-border-light dark:border-border-dark  min-h-[100px]"></textarea>
				<div class="flex justify-end mt-2">
					<button type="submit" class="theme-transition bg-accent-light dark:bg-accent-dark  hover:opacity-80 text-white font-bold py-2 px-4 rounded-full shadow-md focus:outline-none focus:ring-2 focus:ring-accent-light dark:focus:ring-accent-dark  focus:ring-opacity-50">
						Post Comment
					</button>
				</div>
			</div>
		</div>
	</div>
}

templ taskTimeline(task *models.TaskView) {
	<div class="theme-transition bg-secondary-light dark:bg-secondary-dark rounded-xl p-6 mb-6 border border-border-light dark:border-border-dark shadow-lg">
		<h2 class="text-xl font-bold mb-4">Timeline</h2>
		<div class="relative space-y-6">
			<!-- Vertical Line -->
			<div class="absolute left-[15px] top-0 bottom-0 w-[3px] bg-border-light dark:bg-border-dark "></div>
			<!-- Timeline Item -->
			<div class="relative flex gap-4">
				<div class="flex-shrink-0 relative z-10 ">
					<div class="h-8 w-8 rounded-full bg-accent-light dark:bg-accent-dark  flex items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-primary-light dark:text-primary-dark ">
							<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653z"></path>
						</svg>
					</div>
				</div>
				<div class="flex-grow">
					<div class="flex justify-between items-start">
						<div>
							<h3 class="font-medium">Started task</h3>
							<p class="text-sm text-text-light dark:text-text-dark ">Task timer started</p>
						</div>
						<time class="text-sm text-text-light/70 dark:text-text-dark/70">Apr 20, 2025 - 5:49 PM</time>
					</div>
				</div>
			</div>
			<!-- Timeline Item - Task Update -->
			<div class="relative flex gap-4">
				<div class="flex-shrink-0 relative z-10">
					<div class="h-8 w-8 rounded-full bg-text-light dark:bg-text-dark  flex items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-primary-light dark:text-primary-dark ">
							<path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125"></path>
						</svg>
					</div>
				</div>
				<div class="flex-grow">
					<div class="flex justify-between items-start">
						<div>
							<h3 class="font-medium">Updated task</h3>
						</div>
						<time class="text-sm text-text-light/70 dark:text-text-dark/70">Apr 20, 2025 - 8:30 PM</time>
					</div>
					<div class="theme-transition bg-primary-light dark:bg-primary-dark  rounded-lg p-4 border border-border-light dark:border-border-dark  mt-2 space-y-2">
						<div class="flex items-center gap-2 text-sm text-text-light dark:text-text-dark ">
							<span class="font-medium">Due Date:</span>
							<span class="line-through">Apr 23, 2025</span>
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-text-light/70 dark:text-text-dark/70">
								<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"></path>
							</svg>
							<span>Apr 25, 2025</span>
						</div>
						<div class="flex items-center gap-2 text-sm text-text-light dark:text-text-dark ">
							<span class="font-medium">Project:</span>
							<span class="line-through">Project B</span>
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-text-light/70 dark:text-text-dark/70">
								<path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"></path>
							</svg>
							<span>Project A</span>
						</div>
					</div>
				</div>
			</div>
			<!-- Timeline Item -->
			<div class="relative flex gap-4">
				<div class="flex-shrink-0 relative z-10">
					<div class="h-8 w-8 rounded-full bg-warning-light dark:bg-warning-dark flex items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-primary-light dark:text-primary-dark">
							<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 5.25v13.5m-7.5-13.5v13.5"></path>
						</svg>
					</div>
				</div>
				<div class="flex-grow">
					<div class="flex justify-between items-start">
						<div>
							<h3 class="font-medium">Paused task</h3>
							<p class="text-sm text-text-light dark:text-text-dark ">Task paused for 15 minutes</p>
						</div>
						<time class="text-sm text-text-light/70 dark:text-text-dark/70">Apr 20, 2025 - 6:30 PM</time>
					</div>
				</div>
			</div>
			<!-- Timeline Item -->
			<div class="relative flex gap-4">
				<div class="flex-shrink-0 relative z-10">
					<div class="h-8 w-8 rounded-full bg-accent-light dark:bg-accent-dark  flex items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-primary-light dark:text-primary-dark">
							<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653z"></path>
						</svg>
					</div>
				</div>
				<div class="flex-grow">
					<div class="flex justify-between items-start">
						<div>
							<h3 class="font-medium">Resumed task</h3>
							<p class="text-sm text-text-light dark:text-text-dark ">Task timer resumed</p>
						</div>
						<time class="text-sm text-text-light/70 dark:text-text-dark/70">Apr 20, 2025 - 6:45 PM</time>
					</div>
				</div>
			</div>
			<!-- Timeline Item with Comment -->
			<div class="relative flex gap-4">
				<div class="flex-shrink-0 relative z-10 bg-secondary-light dark:bg-secondary-dark">
					<div class="h-8 w-8 rounded-full bg-text-light dark:bg-text-dark  flex items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-primary-light dark:text-primary-dark ">
							<path stroke-linecap="round" stroke-linejoin="round" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 0 1 .865-.501 48.172 48.172 0 0 0 3.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"></path>
						</svg>
					</div>
				</div>
				<div class="flex-grow">
					<div class="flex justify-between items-start">
						<div>
							<h3 class="font-medium">Added comment</h3>
						</div>
						<time class="text-sm text-text-light/70 dark:text-text-dark/70">Apr 20, 2025 - 7:15 PM</time>
					</div>
					<div class="theme-transition bg-primary-light dark:bg-primary-dark  rounded-lg p-4 border border-border-light dark:border-border-dark  mt-2">
						<div class="flex items-start gap-3">
							<div class="flex-shrink-0">
								<div class="group relative">
									<div class="h-8 w-8 rounded-full bg-accent-light dark:bg-accent-dark  flex items-center justify-center text-primary-light dark:text-primary-dark  font-medium cursor-pointer">
										M
									</div>
									<!-- Tooltip -->
									<div class="absolute -top-8 left-1/2 -translate-x-1/2 px-2 py-1 bg-secondary-light dark:bg-secondary-dark  border border-border-light dark:border-border-dark  rounded text-xs text-text-light dark:text-text-dark  whitespace-nowrap opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all">
										Marco
									</div>
								</div>
							</div>
							<p class="text-sm text-text-light dark:text-text-dark ">
								Completed the initial component design. Need to review with the team tomorrow.
							</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}
