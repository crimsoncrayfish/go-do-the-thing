package templ_project

import (
	"fmt"
	"go-do-the-thing/src/helpers/constants"
	"go-do-the-thing/src/models"
	fm "go-do-the-thing/src/models/forms"
	ts "go-do-the-thing/src/shared/templ"
)

templ ProjectWithBody(project models.ProjectView, navbar models.NavBarObject, formdata fm.ProjectForm) {
	<!DOCTYPE html>
	<html lang="en">
		@ts.Header()
		<body id="main-body" class="bg-primary-50 dark:bg-primary-900 antialiased">
			@ProjectView(project, navbar, formdata)
		</body>
	</html>
}

templ ProjectView(project models.ProjectView, navbar models.NavBarObject, formdata fm.ProjectForm) {
	@ts.NavBar(navbar)
	<div id="project-view" class="w-full lg:w-[80%] m-auto px-1 lg:px-[10%] pt-5 text-primary-900 dark:text-primary-50">
		<div class="flex w-full justify-between items-center">
			<div class="flex items-center">
				<button
					hx-get="/projects"
					hx-replace-url="true"
					hx-target="body"
					class="text-action-700 hover:text-primary-50 mr-5 font-medium rounded-lg text-sm px-5 py-2.5 text-center
                        dark:border-action-500 dark:text-action-500 dark:hover:text-primary-50 dark:hover:bg-action-600
                        dark:focus:ring-action-800 flex items-center"
				>
					@ts.SvgBack()
					Back
				</button>
			</div>
			<button
				onclick="swapClassForId('max-h-0', 'max-h-[50rem]','edit-project-form-container');swapClassForId('opacity-0', 'opacity-100','edit-project-form-container');"
				class="float-end text-action-700 hover:text-primary-50 font-medium rounded-lg text-sm px-5 py-2.5 text-center
                dark:border-action-500 dark:text-action-500 dark:hover:text-primary-50 dark:hover:bg-action-600
                dark:focus:ring-action-800 flex items-center"
			>
				@ts.SvgEdit()
				&nbsp;Edit
			</button>
		</div>
		<div
			id="edit-project-form-container"
			class=" max-h-0 opacity-0 transition-[opacity, max-height] pt-2 duration-500 ease-in-out"
		>
			<div
				class="overflow-y-auto overflow-x-hidden z-50 justify-center items-center bg-opacity-40 w-full md:inset-0 max-h-full"
			>
				<div class="relative bg-primary-50 rounded-lg shadow dark:bg-primary-700">
					<div
						class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-primary-600"
					>
						<p class="text-primary-900 text-xl dark:text-primary-50">TODO:</p>
						<button
							class="text-primary-900 dark:text-primary-50"
							onclick="swapClassForId('max-h-0', 'max-h-[50rem]','edit-project-form-container');swapClassForId('opacity-0', 'opacity-100','edit-project-form-container');"
						>
							@ts.SvgClose()
						</button>
					</div>
					@ProjectForm(fmt.Sprintf("/project/%d", project.Id), "Update", formdata)
				</div>
			</div>
		</div>
		@projectContent(project)
	</div>
}

templ projectContent(project models.ProjectView) {
	<div id="project-content">
		<div
			class="overflow-y-auto overflow-x-hidden mt-2 z-50 justify-center items-center bg-opacity-40 w-full md:inset-0 max-h-full"
		>
			<div class="relative bg-primary-50 shadow dark:bg-primary-700">
				<div
					class="flex items-center justify-between p-4 md:p-5 border-b rounded-lg rounded-t dark:border-primary-600"
				>
					<div class="sm:flex w-full sm:justify-between items-center">
						<div>
							<div class="flex items-center">
								@statusIcon(project)
								<div class="mx-4 text-xl ">
									if len(project.Name) > 0 {
										{ project.Name }
									} else {
										{ project.Description }
									}
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div
				class="p-4 bg-transparent border-b dark:border-primary-600 divide-primary-900 dark:divide-primary-600"
			>
				if len(project.Name) > 0 {
					{ project.Description }
				}
				<div class="sm:flex w-full sm:justify-between items-center">
					<p>Assigned To: { project.Owner.FullName }</p>
					<p class="pt-2 sm:p-0">Due on: { project.DueDate.Format(constants.DateFormat) }</p>
				</div>
				<div>Created by: { project.CreatedBy.FullName }</div>
				<div>Created on: { project.CreatedDate.String() }</div>
			</div>
		</div>
	</div>
}

templ ProjectContentOOB(project models.ProjectView) {
	<div id="project-content" hx-swap-oob="true">
		@projectContent(project)
	</div>
}
