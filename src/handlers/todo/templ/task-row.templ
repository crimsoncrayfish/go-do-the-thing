package templ_todo

import (
"fmt"
"go-do-the-thing/src/models"
templ_shared "go-do-the-thing/src/shared/templ"
)

templ TaskRow(task models.TaskView) {
<tr id={ fmt.Sprintf("task-row-%d", task.Id) } class="item-row transition-transform cursor-pointer text-gray-900 dark:text-gray-50
        odd:bg-white odd:dark:bg-gray-900
        even:bg-gray-50 even:dark:bg-gray-800
        hover:bg-gray-100 hover:dark:bg-gray-700 border-b dark:border-gray-700 ">
	@taskRowContent(task)
</tr>
}

templ TaskRowOOB(task models.TaskView) {
<tbody id="task-rows" hx-swap-oob="afterbegin">
	<tr id={ fmt.Sprintf("task-row-%d", task.Id) } class="item-row transition-transform cursor-pointer text-gray-900 dark:text-gray-50
        odd:bg-white odd:dark:bg-gray-900
        even:bg-gray-50 even:dark:bg-gray-800
        hover:bg-gray-100 hover:dark:bg-gray-700 border-b dark:border-gray-700 ">
		@taskRowContent(task)
	</tr>
</tbody>
}

templ taskRowContent(task models.TaskView) {
<td class="pl-5 w-0 mx-auto">
	<div hx-swap="outerHTML" hx-target="closest tr" hx-post={ fmt.Sprintf("/todo/item/status/%d", task.Id) }>
		@statusIcon(task)
	</div>
</td>
<td hx-swap="outerHTML" hx-target="body" hx-get={ fmt.Sprintf("/todo/item/%d", task.Id) }
	class="px-6 py-4 font-medium text-xl">
	if task.Name != "" {
	{ task.Name }
	} else {
	{ task.Description }
	}
	<dl class="text-sm">
		if task.Name != "" {
		<dt class="sr-only">Description</dt>
		<dd class="font-light text-wrap">{ task.Description }</dd>
		}
		<dt class="sr-only lg:hidden">Assigned To</dt>
		<dd class="font-light lg:hidden">{ task.AssignedTo }</dd>
		<dt class="sr-only md:hidden">Due date</dt>
		<dd class="font-light md:hidden">{ task.DueDate.Time.Format("2006-01-02") }</dd>
		<dt class="sr-only xl:hidden">Tag</dt>
		<dd class="font-light xl:hidden">{ task.Tag }</dd>
	</dl>
</td>
<td hx-swap="outerHTML" hx-target="body" hx-get={ fmt.Sprintf("/todo/item/%d", task.Id) }
	class="hidden md:table-cell px-6 py-4">
	{ task.DueDate.Time.Format("2006-01-02") }
</td>
<td hx-swap="outerHTML" hx-target="body" hx-get={ fmt.Sprintf("/todo/item/%d", task.Id) }
	class="hidden lg:table-cell px-6 py-4">
	{ task.AssignedTo }
</td>
<td hx-swap="outerHTML" hx-target="body" hx-get={ fmt.Sprintf("/todo/item/%d", task.Id) }
	class="hidden xl:table-cell px-6 py-4">
	<div class="flex flex-row">
		@templ_shared.SvgTag()
		<p>&nbsp;{ task.Tag }</p>
	</div>
</td>
<td class="px-6 py-4">
	<button class="text-red-500" hx-swap="outerHTML swap:0.5s" hx-target="closest tr" hx-on--after-request={
		fmt.Sprintf("toggleClassForId('-translate-x-full','task-row-%d')", task.Id) } hx-delete={
		fmt.Sprintf("/todo/item/%d", task.Id) }>
		@templ_shared.SvgBin()
	</button>
</td>
}

templ statusIcon(task models.TaskView) {
<div if task.Status==models.Completed { class="text-green-400" } else if beforeNow(task) { class="text-red-500" } else {
	class="text-yellow-500" }>
	if task.Status == models.Completed {
	@templ_shared.SvgCheck()
	} else {
	@templ_shared.SvgWait()
	}
</div>
}

func beforeNow(task models.TaskView) bool {
beforenow, _ := task.DueDate.BeforeNow()
return beforenow
}
